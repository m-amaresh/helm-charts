apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-headless
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: redis-cluster
  {{- if or .Values.redis.service.headless.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.redis.service.headless.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.redis.service.headless.annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-redis
      port: {{ .Values.redis.containerPorts.redis }}
      targetPort: redis
      protocol: TCP
    {{- if .Values.cluster.enableGossipPortService }}
    - name: tcp-gossip
      port: {{ .Values.redis.containerPorts.gossip }}
      targetPort: gossip
      protocol: TCP
    {{- end }}
  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis-cluster
    